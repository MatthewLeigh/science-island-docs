"use strict";(self.webpackChunkscience_island_docs=self.webpackChunkscience_island_docs||[]).push([[2448],{5753:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"coding-conventions/version-control/branching","title":"Branching","description":"All branching within the project must adhere to the following requirements:","source":"@site/docs/98-coding-conventions/02-version-control/01-branching.md","sourceDirName":"98-coding-conventions/02-version-control","slug":"/coding-conventions/version-control/branching","permalink":"/science-island-docs/coding-conventions/version-control/branching","draft":false,"unlisted":false,"editUrl":"https://github.com/MatthewLeigh/science-island-docs/tree/main/science-island-docs/docs/98-coding-conventions/02-version-control/01-branching.md","tags":[],"version":"current","lastUpdatedBy":"MatthewLeigh","lastUpdatedAt":1743502302000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Version Control","permalink":"/science-island-docs/category/version-control"},"next":{"title":"Branching","permalink":"/science-island-docs/coding-conventions/version-control/commits"}}');var s=t(4848),o=t(8453);const r={sidebar_position:1},c="Branching",a={},l=[];function d(n){const e={h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"branching",children:"Branching"})}),"\n",(0,s.jsx)(e.p,{children:"All branching within the project must adhere to the following requirements:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Use Kebab Case for branch names (e.g., add-authentication)."}),"\n",(0,s.jsx)(e.li,{children:"Only use alphanumeric characters in branch names."}),"\n",(0,s.jsx)(e.li,{children:"Branch names should either be the same as the task name, or clearly indicate the task being worked on."}),"\n",(0,s.jsx)(e.li,{children:"Depending on how tasks end up being divvied up, we may prepend one of the following titles with a forward slash (/) to the branch name to further specify its purpose:"}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"[Top level task name/title]:"})," If sub tasks are being given to different team members","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"feature:"})," For new functionality"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"bugfix:"})," For fixing issues"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"refactor:"})," For code improvements"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"docs:"})," For documentation updates"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"test:"})," For test related changes"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>c});var i=t(6540);const s={},o=i.createContext(s);function r(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);