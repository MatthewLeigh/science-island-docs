"use strict";(self.webpackChunkscience_island_docs=self.webpackChunkscience_island_docs||[]).push([[1940],{2893:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"docker-compose/start","title":"Start","description":"Build","source":"@site/docs/03-docker-compose/02-start.md","sourceDirName":"03-docker-compose","slug":"/docker-compose/start","permalink":"/science-island-docs/docker-compose/start","draft":false,"unlisted":false,"editUrl":"https://github.com/MatthewLeigh/science-island-docs/tree/main/science-island-docs/docs/03-docker-compose/02-start.md","tags":[],"version":"current","lastUpdatedBy":"MatthewLeigh","lastUpdatedAt":1743502302000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Docker Compose File Structure","permalink":"/science-island-docs/docker-compose/docker-compose-file-structure"},"next":{"title":"Kubernetes","permalink":"/science-island-docs/category/kubernetes"}}');var o=n(4848),c=n(8453);const r={sidebar_position:2},d="Start",i={},l=[{value:"Build",id:"build",level:2},{value:"Run",id:"run",level:2}];function a(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"start",children:"Start"})}),"\n",(0,o.jsx)(t.h2,{id:"build",children:"Build"}),"\n",(0,o.jsxs)(t.p,{children:["To build your project with the latest version of the images, navigate to root file which contains the ",(0,o.jsx)(t.code,{children:"docker-compose.yml"})," file and run the following command to build the project."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sh",children:"$ docker compose build --pull --no-cache\n"})}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Flag"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"--pull"})}),(0,o.jsx)(t.td,{children:"Forces Docker to pull the latest base images from the registry before building, ensuring you are using the most up-to-date dependencies."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"--no-cache"})}),(0,o.jsx)(t.td,{children:"Prevents Docker from using cached layers, forcing a full rebuild of the image. This ensures that all dependencies and build steps are executed from scratch."})]})]})]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"--pull"})," and ",(0,o.jsx)(t.code,{children:"--no-cache"})," are both optional flags. I would only recommend using them if you are actively changing the image and want to test it fresh."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"run",children:"Run"}),"\n",(0,o.jsx)(t.p,{children:"Once built, you can run the project with the following command."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sh",children:"$ docker compose up -d\n"})}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"-d"})," detached mode is optional."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var s=n(6540);const o={},c=s.createContext(o);function r(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);