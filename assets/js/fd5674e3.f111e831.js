"use strict";(self.webpackChunkscience_island_docs=self.webpackChunkscience_island_docs||[]).push([[641],{1897:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"docker/deploy-custom-image-locally","title":"Deploy Custom Image Locally","description":"In most cases, we want to deploy our app in a container, not someone elses. This page gives you an overview of how to turn a simple local project into an Image that you can Containerize.","source":"@site/docs/02-docker/03-deploy-custom-image-locally.md","sourceDirName":"02-docker","slug":"/docker/deploy-custom-image-locally","permalink":"/science-island-docs/docker/deploy-custom-image-locally","draft":false,"unlisted":false,"editUrl":"https://github.com/MatthewLeigh/science-island-docs/tree/main/science-island-docs/docs/02-docker/03-deploy-custom-image-locally.md","tags":[],"version":"current","lastUpdatedBy":"MatthewLeigh","lastUpdatedAt":1743225617000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Deploy Existing Image Locally","permalink":"/science-island-docs/docker/deploy-existing-image-locally"},"next":{"title":"Upload Image to Docker Hub","permalink":"/science-island-docs/docker/upload-image-to-docker-hub"}}');var s=t(4848),r=t(8453);const o={sidebar_position:3},a="Deploy Custom Image Locally",c={},l=[{value:"Create a New React App",id:"create-a-new-react-app",level:2},{value:"Create a Dockerfile",id:"create-a-dockerfile",level:2},{value:"Create a .dockerignore file",id:"create-a-dockerignore-file",level:2},{value:"Build the Image",id:"build-the-image",level:2},{value:"Run the Image",id:"run-the-image",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"deploy-custom-image-locally",children:"Deploy Custom Image Locally"})}),"\n",(0,s.jsx)(n.p,{children:"In most cases, we want to deploy our app in a container, not someone elses. This page gives you an overview of how to turn a simple local project into an Image that you can Containerize."}),"\n",(0,s.jsx)(n.h2,{id:"create-a-new-react-app",children:"Create a New React App"}),"\n",(0,s.jsx)(n.p,{children:"Navigate to a temporary local directory, and paste in the following command to create and run a boilerplate React app. Note that this will take a minute."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ npx create-react-app first-image && cd first-image && npm start\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can view the app at ",(0,s.jsx)(n.a,{href:"http://localhost:3000/",children:"http://localhost:3000/"})," to make sure it was set up correctly. The link should open automatically when ",(0,s.jsx)(n.code,{children:"npm start"})," is run."]}),"\n",(0,s.jsxs)(n.p,{children:["Once you confirm that the app is set up correctly, stop it by terminating the batch job via the terminal ",(0,s.jsx)(n.code,{children:"ctrl + c"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"create-a-dockerfile",children:"Create a Dockerfile"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"Dockerfile"})," is simply a text file that contains a list of commands that a Docker client calls when creating an Image. Create a file called ",(0,s.jsx)(n.code,{children:"Dockerfile"})," in the ",(0,s.jsx)(n.code,{children:"first-image"})," dir and add the following content. The table below explains the relevance of each line in the Dockerfile."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:'# Use official Node.js image as base\nFROM node:18-alpine\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy package.json and package-lock.json first\nCOPY package*.json ./\n\n# Install dependencies\nRUN npm install\n\n# Copy the entire project to the container\nCOPY . .\n\n# Build the React app\nRUN npm run build\n\n# Use Nginx to serve the production build\nFROM nginx:alpine\nCOPY --from=0 /app/build /usr/share/nginx/html\n\n# Expose port 80\nEXPOSE 80\n\n# Start Nginx server\nCMD ["nginx", "-g", "daemon off;"]\n'})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Line"}),(0,s.jsx)(n.th,{children:"What it does"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FROM node:18-alpine"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"FROM"})," tells us the base image for the Container. A ",(0,s.jsx)(n.em,{children:"Base Image"})," is typically the OS or ... that the Container runs on. In this case, we are using the official Node.js 18 Alpine image."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"WORKDIR /app"})}),(0,s.jsxs)(n.td,{children:["Sets ",(0,s.jsx)(n.code,{children:"/app"})," as the working directory inside the container. All subsequent commands run in this directory."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"COPY package*.json ./"})}),(0,s.jsxs)(n.td,{children:["Copies ",(0,s.jsx)(n.code,{children:"package.json"})," and ",(0,s.jsx)(n.code,{children:"package-lock.json"})," to the container first for efficient dependency caching."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RUN npm install"})}),(0,s.jsx)(n.td,{children:"Installs the project dependencies inside the container."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"COPY . ."})}),(0,s.jsxs)(n.td,{children:["Copies the entire project (except ignored files from ",(0,s.jsx)(n.code,{children:".dockerignore"}),") into the container."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RUN npm run build"})}),(0,s.jsxs)(n.td,{children:["Builds the React app, creating static files in ",(0,s.jsx)(n.code,{children:"/app/build"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FROM nginx:alpine"})}),(0,s.jsx)(n.td,{children:"Uses Nginx Alpine as the second stage of the multi-stage build to serve the React app efficiently."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"COPY --from=0 /app/build /usr/share/nginx/html"})}),(0,s.jsxs)(n.td,{children:["Copies the ",(0,s.jsx)(n.code,{children:"build"})," folder from the first stage (",(0,s.jsx)(n.code,{children:"node:18-alpine"}),") into Nginx's web directory."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"EXPOSE 80"})}),(0,s.jsx)(n.td,{children:"Documents that the container listens on port 80 (but does not actually bind it)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'CMD ["nginx", "-g", "daemon off;"]'})}),(0,s.jsx)(n.td,{children:"Runs Nginx in the foreground to serve the React app."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"create-a-dockerignore-file",children:"Create a .dockerignore file"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".dockerignore"})," files prevents unnecessary files form being copied into the container."]}),"\n",(0,s.jsxs)(n.p,{children:["For our basic application, create the ",(0,s.jsx)(n.code,{children:".dockerignore"})," file in the ",(0,s.jsx)(n.code,{children:"first-image"})," fir and add the following content."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-.dockerignore",children:"node_modules\nbuild\ndist\nnpm-debug.log\nDockerfile\n.dockerignore\n"})}),"\n",(0,s.jsx)(n.h2,{id:"build-the-image",children:"Build the Image"}),"\n",(0,s.jsxs)(n.p,{children:["Now we are ready to build the Image! Enter the following command, making sure to substitute ",(0,s.jsx)(n.code,{children:"matthewcross97"})," for your Docker username. The below table explains what each part of the command does."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ docker build -t matthewcross97/first-image:v1 .\n"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Line"}),(0,s.jsx)(n.th,{children:"What it does"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker build"})}),(0,s.jsx)(n.td,{children:"Tells Docker to build an image from the Dockerfile in the specified directory."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-t matthewcross97/first-image"})}),(0,s.jsx)(n.td,{children:"The -t flag assigns a name (and optionally a username/repository) to the image. matthewcross97/first-image is the image name, with matthewcross97 being the Docker Hub username or organization."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:":v1"})}),(0,s.jsx)(n.td,{children:"The tag for the image (e.g., v1 for version 1). This allows you to manage versions of the image."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"."})}),(0,s.jsx)(n.td,{children:"Specifies the build context (current directory). It tells Docker to look for the Dockerfile and files in the current directory to include in the image."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"run-the-image",children:"Run the Image"}),"\n",(0,s.jsx)(n.p,{children:"The final step is to test it to see if it works. We can do that with the following command. Again, remember to substitute the organization name with your own."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ docker run -d -p 3000:80 --name first-image matthewcross97/first-image:v1\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You should be able to view the container at ",(0,s.jsx)(n.a,{href:"http://localhost:3000/",children:"http://localhost:3000/"})," if you've used the same port as the example."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);